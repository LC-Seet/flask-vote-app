apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: acs-deployment-check
spec:
  params:
  - description: Secret containing the address:port tuple for StackRox Central (example - rox.stackrox.io:443)
    name: rox_central_endpoint
    type: string
  - description: Secret containing the StackRox API token with CI permissions
    name: rox_api_token
    type: string
  - description: YAML file in the deployfiles workspace
    name: file
    type: string
  results:
  - description: Output of `roxctl deployment check`
    name: check_output
  steps:
  - env:
    - name: ROX_API_TOKEN
      valueFrom:
        secretKeyRef:
          key: rox_api_token
          name: $(params.rox_api_token)
    - name: ROX_CENTRAL_ENDPOINT
      valueFrom:
        secretKeyRef:
          key: rox_central_endpoint
          name: $(params.rox_central_endpoint)
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    image: centos
    name: acs-deployment-check
    resources: {}
    script: "#!/usr/bin/env bash\nset +x\n# Debug... \n#echo $POD_NAMESPACE \n#pwd\n#ls -l $(workspaces.deployfiles.path)\n#find $(workspaces.deployfiles.path) -type f | grep -i image-digest \n# Debug \nSHA=`cat $(workspaces.deployfiles.path)/image-digest` \n# Insert image into deployment \nsed \"s/image: .*/image: image-registry.openshift-image-registry.svc:5000\\/$POD_NAMESPACE\\/vote-app@$SHA/g\" < $(workspaces.deployfiles.path)/deploy-all/deployment/vote-app.yaml > $(workspaces.deployfiles.path)/$(params.file)\n#cat $(workspaces.deployfiles.path)/$(params.file)\ncurl -s -k -L -H \"Authorization: Bearer $ROX_API_TOKEN\" https://$ROX_CENTRAL_ENDPOINT/api/cli/download/roxctl-linux --output ./roxctl  > /dev/null\nchmod +x ./roxctl  > /dev/null\n./roxctl deployment check --insecure-skip-tls-verify -e $ROX_CENTRAL_ENDPOINT -f $(workspaces.deployfiles.path)/$(params.file) "
  workspaces:
  - description: |
      The folder containing deployment files
    mountPath: /deployfile
    name: deployfiles
